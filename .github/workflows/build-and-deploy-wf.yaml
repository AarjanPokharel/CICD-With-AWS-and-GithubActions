name: Build and Push Docker Image to ECR and run it within an EC2 instance

on:
  # push:
  #   paths:
  #     - 'src/*'
  #     - 'Dockerfile'
  #   branches:
  #     - master
  
  workflow_dispatch:
    
env:
  AWS_REGION: "us-east-1"
  AWS_EC2: "flaskapp-ec2-instance"
  ECR_REPO: "flaskapp-docker"
  GIT_SHA: ${{ github.sha }}

jobs:
  build-docker-image:

    runs-on: ubuntu-latest
    steps:
      - name: Check Repo
        uses: actions/checkout@v2

      - name: Config AWS Creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR 
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image to ECR
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.GIT_SHA }} .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.GIT_SHA }}


  deploy-docker-container:
    
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - name: Check Repo
        uses: actions/checkout@v2

      - name: Config AWS Creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Public IP of ec2 instance and Github SHA
        run: |
          echo "public_ip: $(aws ec2 describe-instances --filters "Name=tag:Name, Values=${{ env.AWS_EC2 }}" --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)"
          echo "EC2_PUBLIC_IP=$(aws ec2 describe-instances --filters "Name=tag:Name, Values=${{ env.AWS_EC2 }}" --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)" >> "$GITHUB_ENV"
          echo "SHA:$GITHUB_SHA"

      - name: Remote SSH using SSH key
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Cleaning up docker containers and images"
            docker rm -f $(docker ps -aq)
            docker rmi -f $(docker images -q)

            echo "Deploying Container..."
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
            docker run -td -p 80:8000 --name flask-app ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.GIT_SHA }}
